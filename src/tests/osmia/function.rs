use super::*;

macro_tests!(
	test,
	(
		fn_01,
		Some(r#"{{fn foo}}{{print "Hello, world!"}}{{done}}"#),
		Some(vec![
			Token::StmtStart,
			Token::Function,
			Token::Whitespace,
			Token::new_alpha("foo"),
			Token::StmtEnd,
			Token::StmtStart,
			Token::Print,
			Token::Whitespace,
			Token::new_str("Hello, world!"),
			Token::StmtEnd,
			Token::StmtStart,
			Token::Done,
			Token::StmtEnd,
			Token::Eof
		]),
		None,
		None
	),
	(
		fn_02,
		Some(r#"{{fn foo; arg}}{{print arg}}{{done}}"#),
		Some(vec![
			Token::StmtStart,
			Token::Function,
			Token::Whitespace,
			Token::new_alpha("foo"),
			Token::Semicolon,
			Token::Whitespace,
			Token::new_alpha("arg"),
			Token::StmtEnd,
			Token::StmtStart,
			Token::Print,
			Token::Whitespace,
			Token::new_alpha("arg"),
			Token::StmtEnd,
			Token::StmtStart,
			Token::Done,
			Token::StmtEnd,
			Token::Eof
		]),
		None,
		None
	),
	(
		fn_03,
		Some(r#"{{fn foo; arg1, arg2}}{{print arg1 + arg2}}{{done}}"#),
		Some(vec![
			Token::StmtStart,
			Token::Function,
			Token::Whitespace,
			Token::new_alpha("foo"),
			Token::Semicolon,
			Token::Whitespace,
			Token::new_alpha("arg1"),
			Token::Comma,
			Token::Whitespace,
			Token::new_alpha("arg2"),
			Token::StmtEnd,
			Token::StmtStart,
			Token::Print,
			Token::Whitespace,
			Token::new_alpha("arg1"),
			Token::Whitespace,
			Token::Plus,
			Token::Whitespace,
			Token::new_alpha("arg2"),
			Token::StmtEnd,
			Token::StmtStart,
			Token::Done,
			Token::StmtEnd,
			Token::Eof
		]),
		None,
		None
	),
	(
		fn_04,
		Some(r#"{{fn foo; arg1=true, arg2 = false}}{{print arg1 + arg2}}{{done}}"#),
		Some(vec![
			Token::StmtStart,
			Token::Function,
			Token::Whitespace,
			Token::new_alpha("foo"),
			Token::Semicolon,
			Token::Whitespace,
			Token::new_alpha("arg1"),
			Token::AssignEq,
			Token::Bool(true),
			Token::Comma,
			Token::Whitespace,
			Token::new_alpha("arg2"),
			Token::Whitespace,
			Token::AssignEq,
			Token::Whitespace,
			Token::Bool(false),
			Token::StmtEnd,
			Token::StmtStart,
			Token::Print,
			Token::Whitespace,
			Token::new_alpha("arg1"),
			Token::Whitespace,
			Token::Plus,
			Token::Whitespace,
			Token::new_alpha("arg2"),
			Token::StmtEnd,
			Token::StmtStart,
			Token::Done,
			Token::StmtEnd,
			Token::Eof
		]),
		None,
		None
	),
	(
		fn_05,
		Some(r#"{{fn foo; ...args}}{{print args}}{{done}}"#),
		Some(vec![
			Token::StmtStart,
			Token::Function,
			Token::Whitespace,
			Token::new_alpha("foo"),
			Token::Semicolon,
			Token::Whitespace,
			Token::Spread,
			Token::new_alpha("args"),
			Token::StmtEnd,
			Token::StmtStart,
			Token::Print,
			Token::Whitespace,
			Token::new_alpha("args"),
			Token::StmtEnd,
			Token::StmtStart,
			Token::Done,
			Token::StmtEnd,
			Token::Eof
		]),
		None,
		None
	)
);
