use super::*;

macro_tests!(
	test,
	(
		while01,
		Some("{{while v < 3}}{{ v }}{{v = v + 1}}{{done}}"),
		Some(vec![
			Token::StmtStart,
			Token::While,
			Token::Whitespace,
			Token::new_alpha("v"),
			Token::Whitespace,
			Token::Less,
			Token::Whitespace,
			Token::new_number("3"),
			Token::StmtEnd,
			Token::StmtStart,
			Token::Whitespace,
			Token::new_alpha("v"),
			Token::Whitespace,
			Token::StmtEnd,
			Token::StmtStart,
			Token::new_alpha("v"),
			Token::Whitespace,
			Token::Assign,
			Token::Whitespace,
			Token::new_alpha("v"),
			Token::Whitespace,
			Token::Plus,
			Token::Whitespace,
			Token::new_number("1"),
			Token::StmtEnd,
			Token::StmtStart,
			Token::Done,
			Token::StmtEnd,
			Token::Eof
		]),
		None,
		None
		// r#"{"v": 0}"#,
		// "012"
	),
	(
		while02,
		Some("{{while v != 0}}{{v % 2}}{{ v = v - 1}}{{done}}"),
		Some(vec![
			Token::StmtStart,
			Token::While,
			Token::Whitespace,
			Token::new_alpha("v"),
			Token::Whitespace,
			Token::NotEqual,
			Token::Whitespace,
			Token::new_number("0"),
			Token::StmtEnd,
			Token::StmtStart,
			Token::new_alpha("v"),
			Token::Whitespace,
			Token::Mod,
			Token::Whitespace,
			Token::new_number("2"),
			Token::StmtEnd,
			Token::StmtStart,
			Token::Whitespace,
			Token::new_alpha("v"),
			Token::Whitespace,
			Token::Assign,
			Token::Whitespace,
			Token::new_alpha("v"),
			Token::Whitespace,
			Token::Minus,
			Token::Whitespace,
			Token::new_number("1"),
			Token::StmtEnd,
			Token::StmtStart,
			Token::Done,
			Token::StmtEnd,
			Token::Eof
		]),
		None,
		None
		// r#"{"v": 10}"#,
		// "0101010101"
	),
	(
		whilefalse,
		Some("{{while false}}123{{done}}"),
		Some(vec![
			Token::StmtStart,
			Token::While,
			Token::Whitespace,
			Token::Bool(false),
			Token::StmtEnd,
			Token::new_raw("123"),
			Token::StmtStart,
			Token::Done,
			Token::StmtEnd,
			Token::Eof
		]),
		None,
		None
		// r#"{}"#,
		// ""
	),
	(
		while03,
		Some("{{while v != 10000}}{{ v = v + 1}}{{done}}{{v}}"),
		Some(vec![
			Token::StmtStart,
			Token::While,
			Token::Whitespace,
			Token::new_alpha("v"),
			Token::Whitespace,
			Token::NotEqual,
			Token::Whitespace,
			Token::new_number("10000"),
			Token::StmtEnd,
			Token::StmtStart,
			Token::Whitespace,
			Token::new_alpha("v"),
			Token::Whitespace,
			Token::Assign,
			Token::Whitespace,
			Token::new_alpha("v"),
			Token::Whitespace,
			Token::Plus,
			Token::Whitespace,
			Token::new_number("1"),
			Token::StmtEnd,
			Token::StmtStart,
			Token::Done,
			Token::StmtEnd,
			Token::StmtStart,
			Token::new_alpha("v"),
			Token::StmtEnd,
			Token::Eof
		]),
		None,
		None
		// r#"{"v": 0}"#,
		// "10000"
	)
);
